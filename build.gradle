buildscript {
	ext {
		springBootVersion = '2.1.0.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'groovy'

group = 'com.ilsee'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 1.8

repositories {
	mavenCentral()
}


dependencies {
	compile("org.springframework.boot:spring-boot-starter-web")
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('com.h2database:h2')
	compile('org.projectlombok:lombok')
	compile('org.apache.commons:commons-collections4:4.1')

	compile('com.querydsl:querydsl-core')
	compile('com.querydsl:querydsl-apt')
	compile('com.querydsl:querydsl-jpa')

    compile('pl.allegro.tech.boot:handlebars-spring-boot-starter:0.3.0')
    compile 'com.github.jknack:handlebars-helpers:4.0.7',
            'com.github.jknack:handlebars-jackson2:4.0.7',
            'com.github.jknack:handlebars-humanize:4.0.7',
            'com.github.jknack:handlebars-markdown:4.0.7'

	compile ('com.google.guava:guava:27.0-jre')
    compile("org.modelmapper:modelmapper:2.3.0")

    compile group: 'org.codehaus.groovy', name: 'groovy-all', version: '2.5.1'
    testCompile group: 'org.spockframework', name: 'spock-core', version: '1.1-groovy-2.4'
}

sourceSets {
	generated {
		java {
			srcDirs = ['src/main/generated']
		}
	}

	test {
		groovy {
			srcDir 'src/test/groovy'
		}
	}
}

configurations {
	querydslapt
}

task generateQueryDSL(type: JavaCompile, group: 'build', description: 'Generates the QueryDSL query types') {
	source = sourceSets.main.java
	classpath = configurations.compile + configurations.querydslapt
	options.compilerArgs = [
			"-proc:only",
			"-processor", "com.querydsl.apt.jpa.JPAAnnotationProcessor"
	]
	destinationDir = sourceSets.generated.java.srcDirs.iterator().next()
}

compileJava {
	dependsOn generateQueryDSL
	source generateQueryDSL.destinationDir
}

compileGeneratedJava {
	dependsOn generateQueryDSL
	options.warnings = false
	classpath += sourceSets.main.runtimeClasspath
}

clean {
	delete sourceSets.generated.java.srcDirs
}
